version: "3.5"

x-environment:
  &default-back-environment
  POSTGRES_DB: "taiga"
  POSTGRES_HOST: "taiga-db"

x-volumes:
  &default-back-volumes
  # These volumens will be used by taiga-back and taiga-async.
  - taiga-static-data:/taiga-back/static
  - taiga-media-data:/taiga-back/media
  # - ./config.py:/taiga-back/settings/config.py

services:
  taiga-db:
    image: postgres:12.3
    env_file:
      - ${INFRA_DIR}/config/taiga.env
    environment:
      POSTGRES_DB: "taiga"
    # healthcheck:
    #   test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
    #   interval: 2s
    #   timeout: 15s
    #   retries: 5
    #   start_period: 3s
    volumes:
      - taiga-db-data:/var/lib/postgresql/data
    networks:
      - infra_network

  taiga-back:
    image: taigaio/taiga-back:latest
    env_file:
      - ${INFRA_DIR}/config/taiga.env
    environment: *default-back-environment
    volumes: *default-back-volumes
    networks:
      - infra_network

  taiga-async:
    image: taigaio/taiga-back:latest
    env_file:
      - ${INFRA_DIR}/config/taiga.env
    entrypoint: ["/taiga-back/docker/async_entrypoint.sh"]
    environment: *default-back-environment
    volumes: *default-back-volumes
    networks:
      - infra_network

  taiga-async-rabbitmq:
    image: rabbitmq:3.8-management-alpine
    env_file:
      - ${INFRA_DIR}/config/taiga.env
    environment:
      RABBITMQ_ERLANG_COOKIE: "${RABBITMQ_ERLANG_COOKIE}"
      RABBITMQ_DEFAULT_USER: "${RABBITMQ_USER}"
      RABBITMQ_DEFAULT_PASS: "${RABBITMQ_PASS}"
      RABBITMQ_DEFAULT_VHOST: "${RABBITMQ_VHOST}"
    hostname: "taiga-async-rabbitmq"
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 2s
      timeout: 15s
      retries: 5
      start_period: 3s
    volumes:
      - taiga-async-rabbitmq-data:/var/lib/rabbitmq
    networks:
      - infra_network

  taiga-front:
    image: taigaio/taiga-front:latest
    env_file:
      - ${INFRA_DIR}/config/taiga.env
    environment:
      TAIGA_URL: "${TAIGA_SCHEME}://${TAIGA_DOMAIN}"
      TAIGA_WEBSOCKETS_URL: "${WEBSOCKETS_SCHEME}://${TAIGA_DOMAIN}"
      TAIGA_SUBPATH: "${SUBPATH}"
    networks:
      - infra_network
    # volumes:
    #   - ./conf.json:/usr/share/nginx/html/conf.json

  taiga-events:
    image: taigaio/taiga-events:latest
    env_file:
      - ${INFRA_DIR}/config/taiga.env
    environment:
      RABBITMQ_USER: "${RABBITMQ_USER}"
      RABBITMQ_PASS: "${RABBITMQ_PASS}"
      TAIGA_SECRET_KEY: "${SECRET_KEY}"
    networks:
      - infra_network

  taiga-events-rabbitmq:
    image: rabbitmq:3.8-management-alpine
    env_file:
      - ${INFRA_DIR}/config/taiga.env
    environment:
      RABBITMQ_ERLANG_COOKIE: "${RABBITMQ_ERLANG_COOKIE}"
      RABBITMQ_DEFAULT_USER: "${RABBITMQ_USER}"
      RABBITMQ_DEFAULT_PASS: "${RABBITMQ_PASS}"
      RABBITMQ_DEFAULT_VHOST: "${RABBITMQ_VHOST}"
    hostname: "taiga-events-rabbitmq"
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 2s
      timeout: 15s
      retries: 5
      start_period: 3s
    volumes:
      - taiga-events-rabbitmq-data:/var/lib/rabbitmq
    networks:
      - infra_network

  taiga-protected:
    image: taigaio/taiga-protected:latest
    env_file:
      - ${INFRA_DIR}/config/taiga.env
    environment:
      MAX_AGE: "${ATTACHMENTS_MAX_AGE}"
      SECRET_KEY: "${SECRET_KEY}"
    networks:
      - infra_network

  taiga-gateway:
    image: nginx:1.19-alpine
    env_file:
      - ${INFRA_DIR}/config/taiga.env
    ports:
      - "9000:80"
    labels:
      traefik.enable: "true"
      traefik.port: 9000
      traefik.frontend.rule: "Host:taiga.${INFRA_DOMAIN}"
    volumes:
      - taiga-static-data:/taiga/static
      - taiga-media-data:/taiga/media
    configs:
      - source: "taiga.conf"
        target: "/etc/nginx/conf.d/default.conf"
    networks:
      - infra_network
    depends_on:
      - taiga-front
      - taiga-back
      - taiga-events

volumes:
  taiga-static-data:
    driver: local
    driver_opts:
      type: nfs4
      o: "addr=${INFRA_FS_SERVER}"
      device: ":/${INFRA_FS_ROOT}/taiga/static"
  taiga-media-data:
    driver: local
    driver_opts:
      type: nfs4
      o: "addr=${INFRA_FS_SERVER}"
      device: ":/${INFRA_FS_ROOT}/taiga/media"
  taiga-db-data:
    driver: local
    driver_opts:
      type: nfs4
      o: "addr=${INFRA_FS_SERVER}"
      device: ":/${INFRA_FS_ROOT}/taiga/db"
  taiga-async-rabbitmq-data:
    driver: local
    driver_opts:
      type: nfs4
      o: "addr=${INFRA_FS_SERVER}"
      device: ":/${INFRA_FS_ROOT}/taiga/rabbitmq-async"
  taiga-events-rabbitmq-data:
    driver: local
    driver_opts:
      type: nfs4
      o: "addr=${INFRA_FS_SERVER}"
      device: ":/${INFRA_FS_ROOT}/taiga/rabbitmq-events"

configs:
  taiga.conf:
    file: "${INFRA_DIR}/config/taiga.conf"
